---
name: Tests
on:
    push:
        branches:
            - main
    pull_request:
      types:
        - opened # To ensure we can have dummy env environments
        - reopened
        - synchronize # pushed commits
    # https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue
    merge_group:

concurrency:
  group: tests-${{ github.ref }}
  # Let them run, so we will see error markings on every commit
  # Subject to change
  cancel-in-progress: false
  
permissions:
  ## see https://github.com/marketplace/actions/composer-lock-diff
  pull-requests: write
  contents: read
  
jobs:
  install:
    name: Install
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.5.0
        with:
          enable-cache: true
      - run: devbox run just install

  comment-composer-lock-diff:
    name: Comment composer.lock diff
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Comment composer.lock diff
        uses: WyriHaximus/github-action-composer.lock-diff@v2
        with:
          workingDirectory: backend/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  static-analysis:
    name: Backend static analysis
    needs:
      - install
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.5.0
        with:
          enable-cache: true
      - name: Build
        run: devbox run just backend/build
      - run: devbox run just backend/static-analysis
  
  backend-unit-tests:
    name: Backend Unit-Tests
    needs:
      - install
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.5.0
        with:
          enable-cache: true
      - name: Build
        run: devbox run just backend/build
      - run: devbox run just backend/test-unit fail-fast=true
  
  backend-tests:
    name: Backend Tests
    needs:
      - install
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.5.0
        with:
          enable-cache: true
      - name: Build
        run: devbox run just backend/build
      - name: Start
        run: devbox run just backend/start && devbox run ./wait-until.sh "mysql --host=127.0.0.1 --port=23306 --database=app_test --user=test --password=test -e \"SHOW TABLES\"" 120
      - run: devbox run just backend/test fail-fast=true
        
  security-check:
    name: Security check
    needs:
    - install
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.5.0
        with:
          enable-cache: true
      - name: Build
        run: devbox run just backend/security-check

  frontend:
    name: Frontend
    needs:
      - install
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.5.0
        with:
          enable-cache: true
      - name: Install dependencies
        run: devbox run just frontend/install offline=true
      - name: Lint
        run: devbox run just frontend/lint
      - name: Unit Tests
        run: devbox run just frontend/tests
      - name: Build
        run: devbox run just frontend/build